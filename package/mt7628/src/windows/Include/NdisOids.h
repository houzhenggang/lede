/*
 ***************************************************************************
 * Ralink Tech Inc.
 * 4F, No. 2 Technology 5th Rd.
 * Science-based Industrial Park
 * Hsin-chu, Taiwan, R.O.C.
 *
 * (c) Copyright 2002-2004, Ralink Technology, Inc.
 *
 * All rights reserved. Ralink's source code is an unpublished work and the
 * use of a copyright notice does not imply otherwise. This source code
 * contains confidential trade secret material of Ralink Tech. Any attemp
 * or participation in deciphering, decoding, reverse engineering or in any
 * way altering the source code is stricitly prohibited, unless the prior
 * written consent of Ralink Technology, Inc. is obtained.
 ***************************************************************************

    Module Name:
    NdisOids.h

    Abstract:
    

    Revision History:
    Who         When          What
    --------    ----------    ----------------------------------------------


*/
#ifndef __NDISOIDS_H__
#define __NDISOIDS_H__

#include    "MtConfig.h"

typedef struct _OID_PENDING_ENTRY
{
    PNDIS_OID_REQUEST   PendingNdisRequest;
    ULONGLONG               OidPendStartTime;
    ULONG                       OidPendingTime;              
}OID_PENDING_ENTRY, *POID_PENDING_ENTRY;

#if DBG
#define DBG_OID_STRING_SIZE    64
#define OID_STR_WRAPPER(oid_str)    oid_str
#else
#define DBG_OID_STRING_SIZE    1
#define OID_STR_WRAPPER(oid_str)    ""
#endif


typedef struct _OID_LIST_ENTRY
{
    NDIS_OID   OID;
    char DbgOidStr[DBG_OID_STRING_SIZE];
    NDIS_STATUS (*QueryFunc)(IN PMP_ADAPTER pAd, IN  PNDIS_OID_REQUEST   NdisRequest);  // For Query.
    NDIS_STATUS (*SetFunc)(IN PMP_ADAPTER pAd, IN  PNDIS_OID_REQUEST   NdisRequest);  //For Set/ QuerySet
}OID_LIST_ENTRY, *POID_LIST_ENTRY;


static OID_LIST_ENTRY MTK_SUPPORT_N6_OIDs[]=
{
// NDIS 6.30...
#if COMPILE_WIN8_ABOVE(CURRENT_OS_NDIS_VER)
    {
        OID_DOT11_WFD_DISCOVER_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_DISCOVER_REQUEST"),
        NULL,
        N6SetOidDot11WfdDiscoverRequest
    },
    {
        OID_DOT11_WFD_ENUM_DEVICE_LIST,
        OID_STR_WRAPPER("OID_DOT11_WFD_ENUM_DEVICE_LIST"),
        N6QueryOidDot11WfdEnumDeviceList,
        NULL
    },
    {
        OID_DOT11_WFD_SEND_GO_NEGOTIATION_RESPONSE,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_GO_NEGOTIATION_RESPONSE"),
        NULL,
        N6SetOidDot11WfdSendGoNegotiationResponse
    },
    {
        OID_DOT11_WFD_DEVICE_CAPABILITY,
        OID_STR_WRAPPER("OID_DOT11_WFD_DEVICE_CAPABILITY"),
        NULL,
        N6SetOidDot11WfdDeviceCapability
    },  
    {
        OID_DOT11_WFD_SEND_INVITATION_RESPONSE,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_INVITATION_RESPONSE"),
        NULL,
        N6SetOidDot11WfdSendInvitationResponse
    },    
    {
        OID_DOT11_WFD_LISTEN_STATE_DISCOVERABILITY,
        OID_STR_WRAPPER("OID_DOT11_WFD_LISTEN_STATE_DISCOVERABILITY"),
        N6QueryOidDot11WfdListenStateDiscoverability,
        N6SetOidDot11WfdListenStateDiscoverability
    },
    {
        OID_DOT11_WFD_GROUP_OWNER_CAPABILITY,
        OID_STR_WRAPPER("OID_DOT11_WFD_GROUP_OWNER_CAPABILITY"),
        NULL,
        N6SetOidDot11WfdGroupOwnerCapability
    },    
    {
        OID_DOT11_WFD_SEND_PROVISION_DISCOVERY_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_PROVISION_DISCOVERY_REQUEST"),
        NULL,
        N6SetOidDot11WfdSendProvisionDiscoveryRequest
    },
    {
        OID_DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST,
        OID_STR_WRAPPER("OID_DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST"),
        NULL,
        N6SetOidDot11WfdSecondaryDeviceTypeList
    },    
    {
        OID_DOT11_WFD_GROUP_JOIN_PARAMETERS,
        OID_STR_WRAPPER("OID_DOT11_WFD_GROUP_JOIN_PARAMETERS"),
        NULL,
        N6SetOidDot11WfdGroupJoinParameters
    },
    
#if 0
    { // Not currently used. Allows us more control
        OID_DOT11_WFD_DEVICE_LISTEN_CHANNEL,
        OID_STR_WRAPPER("OID_DOT11_WFD_DEVICE_LISTEN_CHANNEL"),
        NULL,
        N6SetOidDot11WfdDeviceListenChannel
    },
#endif

    {
        OID_DOT11_WFD_ADDITIONAL_IE,
        OID_STR_WRAPPER("OID_DOT11_WFD_ADDITIONAL_IE"),
        NULL,
        N6SetOidDot11WfdAdditionalIe
    }, 
    {
        OID_DOT11_WFD_CONNECT_TO_GROUP_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_CONNECT_TO_GROUP_REQUEST"),
        NULL,
        N6SetOidDot11WfdConnectToGroupRequest
    },    
    {
        OID_DOT11_WFD_GROUP_START_PARAMETERS,
        OID_STR_WRAPPER("OID_DOT11_WFD_GROUP_START_PARAMETERS"),
        NULL,
        N6SetOidDot11WfdGroupStartParameters
    },    
    {
        OID_DOT11_WFD_SEND_GO_NEGOTIATION_CONFIRMATION,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_GO_NEGOTIATION_CONFIRMATION"),
        NULL,
        N6SetOidDot11WfdSendGoNegotiationConfirmation
    },
    {
        OID_DOT11_WFD_SEND_INVITATION_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_INVITATION_REQUEST"),
        NULL,
        N6SetOidDot11WfdSendInvitationRequest
    },   
    {
        OID_DOT11_WFD_SEND_GO_NEGOTIATION_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_GO_NEGOTIATION_REQUEST"),
        NULL,
        N6SetOidDot11WfdSendGoNegotiationRequest
    },  
    {
        OID_DOT11_WFD_FLUSH_DEVICE_LIST,
        OID_STR_WRAPPER("OID_DOT11_WFD_FLUSH_DEVICE_LIST"),
        NULL,
        N6SetOidDot11WfdFlushDeviceList
    },    
    {
        OID_DOT11_WFD_DEVICE_INFO,
        OID_STR_WRAPPER("OID_DOT11_WFD_DEVICE_INFO"),
        NULL,
        N6SetOidDot11WfdDeviceInfo
    }, 
    {
        OID_DOT11_WFD_DESIRED_GROUP_ID,
        OID_STR_WRAPPER("OID_DOT11_WFD_DESIRED_GROUP_ID"),
        NULL,
        N6SetOidDot11WfdDesiredGroupId
    },
    {
        OID_DOT11_WFD_DISCONNECT_FROM_GROUP_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_DISCONNECT_FROM_GROUP_REQUEST"),
        NULL,
        N6SetOidDot11WfdDisconnectFromGroupRequest
    },    
    {
        OID_DOT11_WFD_START_GO_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_WFD_START_GO_REQUEST"),
        NULL,
        N6SetOidDot11WfdStartGoRequest
    },

    {
        OID_DOT11_WFD_SEND_PROVISION_DISCOVERY_RESPONSE,
        OID_STR_WRAPPER("OID_DOT11_WFD_SEND_PROVISION_DISCOVERY_RESPONSE"),
        NULL,
        N6SetOidDot11WfdSendProvisionDiscoveryResponse
    },
    {
        OID_DOT11_WFD_STOP_DISCOVERY,
        OID_STR_WRAPPER("OID_DOT11_WFD_STOP_DISCOVERY"),
        NULL,
        N6SetOidDot11WfdStopDiscovery
    },    
    {
        OID_DOT11_WFD_GET_DIALOG_TOKEN,
        OID_STR_WRAPPER("OID_DOT11_WFD_GET_DIALOG_TOKEN"),
        N6QueryOidDot11WfdGetDialogToken,
        NULL
    },
    {
        OID_DOT11_POWER_MGMT_MODE_AUTO_ENABLED,
        OID_STR_WRAPPER("OID_DOT11_POWER_MGMT_MODE_AUTO_ENABLED"),
        N6QueryOidDot11PowerMgmtModeAutoEnabled,
        N6SetOidDot11PowerMgmtModeAutoEnabled
    },
    {
        OID_DOT11_POWER_MGMT_MODE_STATUS,
        OID_STR_WRAPPER("OID_DOT11_POWER_MGMT_MODE_STATUS"),
        N6QueryOidDot11PowerMgmtModeStatus,
        N6SetOidDot11PowerMgmtModeStatus
    },
    {
        OID_DOT11_OFFLOAD_NETWORK_LIST,
        OID_STR_WRAPPER("OID_DOT11_OFFLOAD_NETWORK_LIST"),
        N6QueryOidDot11OffloadNetworkList,
        N6SetOidDot11OffloadNetworkList
    },
#endif

    // NDIS 6.20...
#if COMPILE_WIN7_ABOVE(CURRENT_OS_NDIS_VER)
    {
        OID_DOT11_CREATE_MAC,
        OID_STR_WRAPPER("OID_DOT11_CREATE_MAC"),
        NULL,
        N6SetOidDot11CreateMac
    },
    {
        OID_DOT11_DELETE_MAC,
        OID_STR_WRAPPER("OID_DOT11_DELETE_MAC"),
        NULL,
        N6SetOidDot11DeleteMac
    },
    {
        OID_DOT11_VIRTUAL_STATION_CAPABILITY,
        OID_STR_WRAPPER("OID_DOT11_VIRTUAL_STATION_CAPABILITY"),
        N6QueryOidDot11VirtualStationCapability,
        NULL
    },
    {
        OID_DOT11_INCOMING_ASSOCIATION_DECISION,
        OID_STR_WRAPPER("OID_DOT11_INCOMING_ASSOCIATION_DECISION"),
        N6QueryOidDot11IncomingAssociationDecision,
        N6SetOidDot11IncomingAssociationDecision
    },
    {
        OID_DOT11_DISASSOCIATE_PEER_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_DISASSOCIATE_PEER_REQUEST"),
        N6QueryOidDot11DisassociatePeerRequest,
        N6SetOidDot11DisassociatePeerRequest
    },    
    {
        OID_DOT11_WPS_ENABLED,
        OID_STR_WRAPPER("OID_DOT11_WPS_ENABLED"),
        N6QueryOidDot11WpsEnabled,
        N6SetOidDot11WpsEnabled
    },
    {
        OID_DOT11_ENUM_PEER_INFO,
        OID_STR_WRAPPER("OID_DOT11_ENUM_PEER_INFO"),
        N6QueryOidDot11EnumPeerInfo,
        N6SetOidDot11EnumPeerInfo
    },
    {
        OID_DOT11_ADDITIONAL_IE,
        OID_STR_WRAPPER("OID_DOT11_ADDITIONAL_IE"),
        N6QueryOidDot11AdditionalIe,
        N6SetOidDot11AdditionalIe
    },
    {
        OID_DOT11_ASSOCIATION_PARAMS,
        OID_STR_WRAPPER("OID_DOT11_ASSOCIATION_PARAMS"),
        N6QueryOidDot11AssociationParams,
        N6SetOidDot11AssociationParams
    },    
    {
        OID_DOT11_START_AP_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_START_AP_REQUEST"),
        N6QueryOidDot11StartApRequest,
        N6SetOidDot11StartApRequest
    },
    {
        OID_DOT11_AVAILABLE_FREQUENCY_LIST,
        OID_STR_WRAPPER("OID_DOT11_AVAILABLE_FREQUENCY_LIST"),
        N6QueryOidDot11AvailableFrequencyList,
        N6SetOidDot11AvailableFrequencyList
    },
#if 0
    {
        OID_PM_REMOVE_WOL_PATTERN,
        OID_STR_WRAPPER("OID_PM_REMOVE_WOL_PATTERN"),
        N6QueryOidPmRemoveWolPattern,
        N6SetOidPmRemoveWolPattern
    },    
    {
        OID_GEN_INTERRUPT_MODERATION,
        OID_STR_WRAPPER("OID_GEN_INTERRUPT_MODERATION"),
        N6QueryOidGenInterruptModeration,
        N6SetOidGenInterruptModeration
    },
    {
        OID_PM_REMOVE_PROTOCOL_OFFLOAD,
        OID_STR_WRAPPER("OID_PM_REMOVE_PROTOCOL_OFFLOAD"),
        N6QueryOidPmRemoveProtocolOffload,
        N6SetOidPmRemoveProtocolOffload
    },
    {
        OID_PM_ADD_PROTOCOL_OFFLOAD,
        OID_STR_WRAPPER("OID_PM_ADD_PROTOCOL_OFFLOAD"),
        N6QueryOidPmAddProtocolOffload,
        N6SetOidPmAddProtocolOffload
    },      
    {
        OID_PM_ADD_WOL_PATTERN,
        OID_STR_WRAPPER("OID_PM_ADD_WOL_PATTERN"),
        N6QueryOidPmAddWolPattern,
        N6SetOidPmAddWolPattern
    },   
    {
        OID_PM_GET_PROTOCOL_OFFLOAD,
        OID_STR_WRAPPER("OID_PM_GET_PROTOCOL_OFFLOAD"),
        N6QueryOidPmGetProtocolOffload,
        N6SetOidPmGetProtocolOffload
    },    
#endif // if 0
#endif // COMPILE_WIN7_ABOVE

    {
        OID_DOT11_ENUM_BSS_LIST,
        OID_STR_WRAPPER("OID_DOT11_ENUM_BSS_LIST"),
        NULL,
        N6SetOidDot11EnumBssList
    },
    {
        OID_DOT11_NIC_POWER_STATE,
        OID_STR_WRAPPER("OID_DOT11_NIC_POWER_STATE"),
        N6QueryOidDot11NicPowerState,
        N6SetOidDot11NicPowerState
    },
    {
        OID_DOT11_RESET_REQUEST, 
        OID_STR_WRAPPER("OID_DOT11_RESET_REQUEST"),
        NULL,
        N6SetOidDot11ResetRequest
    },
    {
        OID_DOT11_DESIRED_PHY_LIST, 
        OID_STR_WRAPPER("OID_DOT11_DESIRED_PHY_LIST"),
        N6QueryOidDot11DesiredPhyList,
        N6SetOidDot11DesiredPhyList
    },
    {
        OID_DOT11_SCAN_REQUEST,
        OID_STR_WRAPPER("OID_DOT11_SCAN_REQUEST"),
        NULL,
        N6SetOidDot11ScanRequest
    },    
    {
        OID_DOT11_DISCONNECT_REQUEST, 
        OID_STR_WRAPPER("OID_DOT11_DISCONNECT_REQUEST"),
        NULL,
        N6SetOidDot11DisconnectRequest
    },
    {
        OID_DOT11_CONNECT_REQUEST, 
        OID_STR_WRAPPER("OID_DOT11_CONNECT_REQUEST"),
        NULL,
        N6SetOidDot11ConnectRequest
    },    
    {
        OID_DOT11_AUTO_CONFIG_ENABLED, 
        OID_STR_WRAPPER("OID_DOT11_AUTO_CONFIG_ENABLED"),
        N6QueryOidDot11AutoConfigEnabled,
        N6SetOidDot11AutoConfigEnabled
    },
    {
        OID_DOT11_BEACON_PERIOD, 
        OID_STR_WRAPPER("OID_DOT11_BEACON_PERIOD"),
        N6QueryOidDot11BeaconPeriod,
        N6SetOidDot11BeaconPeriod
    },
    {
        OID_DOT11_DTIM_PERIOD, 
        OID_STR_WRAPPER("OID_DOT11_DTIM_PERIOD"),
        N6QueryOidDot11DtimPeriod,
        N6SetOidDot11DtimPeriod
    },
    {
        OID_DOT11_CURRENT_OPERATION_MODE, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_OPERATION_MODE"), 
        N6QueryOidDot11CurrentOperationMode,
        N6SetOidDot11CurrentOperationMode
    },
    {
        OID_DOT11_FLUSH_BSS_LIST,
        OID_STR_WRAPPER("OID_DOT11_FLUSH_BSS_LIST"),
        N6QueryOidDot11FlushBssList,
        N6SetOidDot11FlushBssList
    },    
    {
        OID_DOT11_DESIRED_SSID_LIST, 
        OID_STR_WRAPPER("OID_DOT11_DESIRED_SSID_LIST"),
        N6QueryOidDot11DesiredSsidList,
        N6SetOidDot11DesiredSsidList
    },
    {
        OID_DOT11_CURRENT_CHANNEL, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_CHANNEL"),
        N6QueryOidDot11CurrentChannel,
        N6SetOidDot11CurrentChannel
    },
    {
        OID_DOT11_SAFE_MODE_ENABLED, 
        OID_STR_WRAPPER("OID_DOT11_SAFE_MODE_ENABLED"),
        N6QueryOidDot11SafeModeEnabled,
        N6SetOidDot11SafeModeEnabled
    },
    {
        OID_DOT11_CURRENT_PHY_ID, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_PHY_ID"),
        N6QueryOidDot11CurrentPhyId,
        N6SetOidDot11CurrentPhyId
    },
#if 0
    {
        OID_PNP_ADD_WAKE_UP_PATTERN, 
        OID_STR_WRAPPER("OID_PNP_ADD_WAKE_UP_PATTERN"),
        N6QueryOidPnpAddWakeUpPattern,
        N6SetOidPnpAddWakeUpPattern
    },
    {
        OID_PNP_REMOVE_WAKE_UP_PATTERN, 
        OID_STR_WRAPPER("OID_PNP_REMOVE_WAKE_UP_PATTERN"),
        N6QueryOidPnpRemoveWakeUpPattern,
        N6SetOidPnpRemoveWakeUpPattern
    },    
    {
        OID_PNP_ENABLE_WAKE_UP, 
        OID_STR_WRAPPER("OID_PNP_ENABLE_WAKE_UP"),
        N6QueryOidPnpEnableWakeUp,
        N6SetOidPnpEnableWakeUp
    },    
    {
        OID_PNP_CAPABILITIES, 
        OID_STR_WRAPPER("OID_PNP_CAPABILITIES"),
        N6QueryOidPnpCapabilities,
        N6SetOidPnpCapabilities
    },    
#endif 
    {
        OID_PNP_SET_POWER, 
        OID_STR_WRAPPER("OID_PNP_SET_POWER"),
        NULL,
        N6SetOidPnpSetPower
    },    
    {
        OID_PNP_QUERY_POWER, 
        OID_STR_WRAPPER("OID_PNP_QUERY_POWER"),
        N6QueryOidPnpQueryPower,
        NULL
    },  
    {
        OID_DOT11_MPDU_MAX_LENGTH, 
        OID_STR_WRAPPER("OID_DOT11_MPDU_MAX_LENGTH"),
        N6QueryOidDot11MpduMaxLength,
        NULL
    },
    {
        OID_DOT11_OPERATION_MODE_CAPABILITY, 
        OID_STR_WRAPPER("OID_DOT11_OPERATION_MODE_CAPABILITY"),
        N6QueryOidDot11OperationModeCapability,
        NULL
    },
    {
        OID_DOT11_ATIM_WINDOW, 
        OID_STR_WRAPPER("OID_DOT11_ATIM_WINDOW"),
        N6QueryOidDot11AtimWindow,
        N6SetOidDot11AtimWindow
    },
    {
        OID_DOT11_OPTIONAL_CAPABILITY, 
        OID_STR_WRAPPER("OID_DOT11_OPTIONAL_CAPABILITY"),
        N6QueryOidDot11OptionalCapability,
        NULL
    },
    {
        OID_DOT11_CURRENT_OPTIONAL_CAPABILITY, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_OPTIONAL_CAPABILITY"),
        N6QueryOidDot11CurrentOptionalCapability,
        NULL
    },
    {
        OID_DOT11_STATION_ID, 
        OID_STR_WRAPPER("OID_DOT11_STATION_ID"),
        N6QueryOidDot11StationId,
        NULL
    }, 
#if 0
    {
        OID_DOT11_CHANNEL_AGILITY_ENABLED, 
        OID_STR_WRAPPER("OID_DOT11_CHANNEL_AGILITY_ENABLED"),
        N6QueryOidDot11ChannelAgilityEnabled,
        N6SetOidDot11ChannelAgilityEnabled
    },     
    {
        OID_DOT11_CHANNEL_AGILITY_PRESENT, 
        OID_STR_WRAPPER("OID_DOT11_CHANNEL_AGILITY_PRESENT"),
        N6QueryOidDot11ChannelAgilityPresent,
        N6SetOidDot11ChannelAgilityPresent
    },    
#endif  
    {
        OID_DOT11_OPERATIONAL_RATE_SET, 
        OID_STR_WRAPPER("OID_DOT11_OPERATIONAL_RATE_SET"),
        N6QueryOidDot11OperationalRateSet,
        N6SetOidDot11OperationalRateSet
    },    
    {
        OID_DOT11_MAC_ADDRESS, 
        OID_STR_WRAPPER("OID_DOT11_MAC_ADDRESS"),
        N6QueryOidDot11MacAddress,
        NULL
    },    
    {
        OID_DOT11_RTS_THRESHOLD, 
        OID_STR_WRAPPER("OID_DOT11_RTS_THRESHOLD"),
        N6QueryOidDot11RtsThreshold,
        N6SetOidDot11RtsThreshold
    },
    {
        OID_DOT11_SHORT_RETRY_LIMIT, 
        OID_STR_WRAPPER("OID_DOT11_SHORT_RETRY_LIMIT"),
        N6QueryOidDot11ShortRetryLimit,
        N6SetOidDot11ShortRetryLimit
    },    
    {
        OID_DOT11_LONG_RETRY_LIMIT, 
        OID_STR_WRAPPER("OID_DOT11_LONG_RETRY_LIMIT"),
        N6QueryOidDot11LongRetryLimit,
        N6SetOidDot11LongRetryLimit
    },
    {
        OID_DOT11_FRAGMENTATION_THRESHOLD, 
        OID_STR_WRAPPER("OID_DOT11_FRAGMENTATION_THRESHOLD"),
        N6QueryOidDot11FragmentationThreshold,
        N6SetOidDot11FragmentationThreshold
    },    
    {
        OID_DOT11_MAX_TRANSMIT_MSDU_LIFETIME, 
        OID_STR_WRAPPER("OID_DOT11_MAX_TRANSMIT_MSDU_LIFETIME"),
        N6QueryOidDot11MaxTransmitMsduLifetime,
        NULL
    },   
    {
        OID_DOT11_MAX_RECEIVE_LIFETIME, 
        OID_STR_WRAPPER("OID_DOT11_MAX_RECEIVE_LIFETIME"),
        N6QueryOidDot11MaxReceiveLifetime,
        NULL
    }, 
    {
        OID_DOT11_SUPPORTED_PHY_TYPES, 
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_PHY_TYPES"),
        N6QueryOidDot11SupportedPhyTypes,
        NULL
    }, 
    {
        OID_DOT11_CURRENT_REG_DOMAIN, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_REG_DOMAIN"),
        N6QueryOidDot11CurrentRegDomain,
        N6SetOidDot11CurrentRegDomain
    }, 
    {
        OID_DOT11_TEMP_TYPE, 
        OID_STR_WRAPPER("OID_DOT11_TEMP_TYPE"),
        N6QueryOidDot11TempType,
        NULL
    }, 
    {
        OID_DOT11_DIVERSITY_SUPPORT, 
        OID_STR_WRAPPER("OID_DOT11_DIVERSITY_SUPPORT"),
        N6QueryOidDot11DiversitySupport,
        NULL
    },     
    {
        OID_DOT11_SUPPORTED_POWER_LEVELS, 
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_POWER_LEVELS"),
        N6QueryOidDot11SupportedPowerLevels,
        NULL
    },
    {
        OID_DOT11_CURRENT_TX_POWER_LEVEL, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_TX_POWER_LEVEL"),
        N6QueryOidDot11CurrentTxPowerLevel,
        NULL
    },    
    {
        OID_DOT11_CCA_MODE_SUPPORTED, 
        OID_STR_WRAPPER("OID_DOT11_CCA_MODE_SUPPORTED"),
        N6QueryOidDot11CcaModeSupported,
        NULL
    }, 
    {
        OID_DOT11_CURRENT_CCA_MODE, 
        OID_STR_WRAPPER("OID_DOT11_CURRENT_CCA_MODE"),
        N6QueryOidDot11CurrentCcaMode,
        NULL
    },
    {
        OID_DOT11_ED_THRESHOLD, 
        OID_STR_WRAPPER("OID_DOT11_ED_THRESHOLD"),
        N6QueryOidDot11EdThreshold,
        NULL
    },     
    {
        OID_DOT11_REG_DOMAINS_SUPPORT_VALUE,  
        OID_STR_WRAPPER("OID_DOT11_REG_DOMAINS_SUPPORT_VALUE"),
        N6QueryOidDot11RegDomainsSupportValue,
        NULL
    },
    {
        OID_DOT11_SUPPORTED_TX_ANTENNA, 
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_TX_ANTENNA"),
        N6QueryOidDot11SupportedTxAntenna,
        NULL
    },     
    {
        OID_DOT11_SUPPORTED_RX_ANTENNA, 
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_RX_ANTENNA"),
        N6QueryOidDot11SupportedRxAntenna,
        NULL
    },
    {
        OID_DOT11_DIVERSITY_SELECTION_RX, 
        OID_STR_WRAPPER("OID_DOT11_DIVERSITY_SELECTION_RX"),
        N6QueryOidDot11DiversitySelectionRx,
        NULL
    },
    {
        OID_DOT11_SUPPORTED_DATA_RATES_VALUE,  
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_DATA_RATES_VALUE"),
        N6QueryOidDot11SupportedDataRatesValue,
        NULL
    },
    {
        OID_DOT11_RF_USAGE,  
        OID_STR_WRAPPER("OID_DOT11_RF_USAGE"),
        N6QueryOidDot11RfUsage,
        NULL
    },
#if 0
     {
        OID_DOT11_RECV_SENSITIVITY_LIST,  
        OID_STR_WRAPPER("OID_DOT11_RECV_SENSITIVITY_LIST"),
        N6QueryOidDot11RecvSensitivityList,
        N6SetOidDot11RecvSensitivityList
    },
#endif
    {
        OID_DOT11_MULTI_DOMAIN_CAPABILITY_IMPLEMENTED,  
        OID_STR_WRAPPER("OID_DOT11_MULTI_DOMAIN_CAPABILITY_IMPLEMENTED"),
        N6QueryOidDot11MultiDomainCapabilityImplemented,
        NULL
    },
    {
        OID_DOT11_MULTI_DOMAIN_CAPABILITY_ENABLED,  
        OID_STR_WRAPPER("OID_DOT11_MULTI_DOMAIN_CAPABILITY_ENABLED"),
        N6QueryOidDot11MultiDomainCapabilityEnabled,
        N6SetOidDot11MultiDomainCapabilityEnabled
    },
    {
        OID_DOT11_COUNTRY_STRING,  
        OID_STR_WRAPPER("OID_DOT11_COUNTRY_STRING"),
        N6QueryOidDot11CountryString,
        N6SetOidDot11CountryString
    },
     {
        OID_DOT11_CURRENT_FREQUENCY,  
        OID_STR_WRAPPER("OID_DOT11_CURRENT_FREQUENCY"),
        N6QueryOidDot11CurrentFrequency,
        N6SetOidDot11CurrentFrequency
    },
    {
        OID_DOT11_FREQUENCY_BANDS_SUPPORTED,  
        OID_STR_WRAPPER("OID_DOT11_FREQUENCY_BANDS_SUPPORTED"),
        N6QueryOidDot11FrequencyBandsSupported,
        NULL
    },
    {
        OID_DOT11_SHORT_PREAMBLE_OPTION_IMPLEMENTED, 
        OID_STR_WRAPPER("OID_DOT11_SHORT_PREAMBLE_OPTION_IMPLEMENTED"),
        N6QueryOidDot11ShortPreambleOptionImplemented,
        NULL
    },
    {
        OID_DOT11_PBCC_OPTION_IMPLEMENTED, 
        OID_STR_WRAPPER("OID_DOT11_PBCC_OPTION_IMPLEMENTED"),
        N6QueryOidDot11PbccOptionImplemented,
        NULL
    },
    {
        OID_DOT11_ERP_PBCC_OPTION_IMPLEMENTED,  
        OID_STR_WRAPPER("OID_DOT11_ERP_PBCC_OPTION_IMPLEMENTED"),
        N6QueryOidDot11ErpPbccOptionImplemented,
        NULL
    },
     {
        OID_DOT11_ERP_PBCC_OPTION_ENABLED, 
        OID_STR_WRAPPER("OID_DOT11_ERP_PBCC_OPTION_ENABLED"),
        N6QueryOidDot11ErpPbccOptionEnabled,
        NULL
    },
    {
        OID_DOT11_DSSS_OFDM_OPTION_IMPLEMENTED, 
        OID_STR_WRAPPER("OID_DOT11_DSSS_OFDM_OPTION_IMPLEMENTED"),
        N6QueryOidDot11DsssOfdmOptionImplemented,
        NULL
    },
    {
        OID_DOT11_DSSS_OFDM_OPTION_ENABLED,  
        OID_STR_WRAPPER("OID_DOT11_DSSS_OFDM_OPTION_ENABLED"),
        N6QueryOidDot11DsssOfdmOptionEnabled,
        NULL
    },
    {
        OID_DOT11_SHORT_SLOT_TIME_OPTION_IMPLEMENTED,  
        OID_STR_WRAPPER("OID_DOT11_SHORT_SLOT_TIME_OPTION_IMPLEMENTED"),
        N6QueryOidDot11ShortSlotTimeOptionImplemented,
        NULL
    },
    {
        OID_DOT11_SHORT_SLOT_TIME_OPTION_ENABLED,  
        OID_STR_WRAPPER("OID_DOT11_SHORT_SLOT_TIME_OPTION_ENABLED"),
        N6QueryOidDot11ShortSlotTimeOptionEnabled,
        NULL
    },
    {
        OID_DOT11_POWER_MGMT_REQUEST,  
        OID_STR_WRAPPER("OID_DOT11_POWER_MGMT_REQUEST"),
        N6QueryOidDot11PowerMgmtRequest,
        N6SetOidDot11PowerMgmtRequest
    },
    {
        OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST,  
        OID_STR_WRAPPER("OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST"),
        N6QueryOidDot11ExcludedMacAddressList,
        N6SetOidDot11ExcludedMacAddressList
    },
    {
        OID_DOT11_EXCLUDE_UNENCRYPTED,  
        OID_STR_WRAPPER("OID_DOT11_EXCLUDE_UNENCRYPTED"),
        N6QueryOidDot11ExcludeUnencrypted,
        N6SetOidDot11ExcludeUnencrypted
    },
    {
        OID_DOT11_DESIRED_BSSID_LIST,  
        OID_STR_WRAPPER("OID_DOT11_DESIRED_BSSID_LIST"),
        N6QueryOidDot11DesiredBssidList,
        N6SetOidDot11DesiredBssidList
    },
    {
        OID_DOT11_DESIRED_BSS_TYPE,  
        OID_STR_WRAPPER("OID_DOT11_DESIRED_BSS_TYPE"),
        N6QueryOidDot11DesiredBssType,
        N6SetOidDot11DesiredBssType
    },
    {
        OID_DOT11_STATISTICS,  
        OID_STR_WRAPPER("OID_DOT11_STATISTICS"),
        N6QueryOidDot11Statistics,
        N6SetOidDot11Statistics
    },    
    {
        OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM,  
        OID_STR_WRAPPER("OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM"),
        N6QueryOidDot11EnabledAuthenticationAlgorithm,
        N6SetOidDot11EnabledAuthenticationAlgorithm
    },
    {
        OID_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR,  
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR"),
        N6QueryOidDot11SupportedUnicastAlgorithmPair,
        N6SetOidDot11SupportedUnicastAlgorithmPair
    }, 
    {
        OID_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR,  
        OID_STR_WRAPPER("OID_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR"),
        N6QueryOidDot11SupportedMulticastAlgorithmPair,
        N6SetOidDot11SupportedMulticastAlgorithmPair
    },
    {
        OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM,  
        OID_STR_WRAPPER("OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM"),
        N6QueryOidDot11EnabledUnicastCipherAlgorithm,
        N6SetOidDot11EnabledUnicastCipherAlgorithm
    },  
    {
        OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM,  
        OID_STR_WRAPPER("OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM"),
        N6QueryOidDot11EnabledMulticastCipherAlgorithm,
        N6SetOidDot11EnabledMulticastCipherAlgorithm
    },
    {
        OID_DOT11_CIPHER_DEFAULT_KEY_ID,  
        OID_STR_WRAPPER("OID_DOT11_CIPHER_DEFAULT_KEY_ID"),
        N6QueryOidDot11CipherDefaultKeyId,
        N6SetOidDot11CipherDefaultKeyId
    },  
    {
        OID_DOT11_CIPHER_DEFAULT_KEY,  
        OID_STR_WRAPPER("OID_DOT11_CIPHER_DEFAULT_KEY"),
        N6QueryOidDot11CipherDefaultKey,
        N6SetOidDot11CipherDefaultKey
    },
    {
        OID_DOT11_CIPHER_KEY_MAPPING_KEY,  
        OID_STR_WRAPPER("OID_DOT11_CIPHER_KEY_MAPPING_KEY"),
        N6QueryOidDot11CipherKeyMappingKey,
        N6SetOidDot11CipherKeyMappingKey
    },  
    {
        OID_DOT11_ENUM_ASSOCIATION_INFO,  
        OID_STR_WRAPPER("OID_DOT11_ENUM_ASSOCIATION_INFO"),
        N6QueryOidDot11EnumAssociationInfo,
        NULL
    },
    {
        OID_DOT11_HARDWARE_PHY_STATE,  
        OID_STR_WRAPPER("OID_DOT11_HARDWARE_PHY_STATE"),
        N6QueryOidDot11HardwarePhyState,
        NULL
    },  
    {
        OID_DOT11_MEDIA_STREAMING_ENABLED,  
        OID_STR_WRAPPER("OID_DOT11_MEDIA_STREAMING_ENABLED"),
        N6QueryOidDot11MediaStreamingEnabled,
        N6SetOidDot11MediaStreamingEnabled
    },
    {
        OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD,  
        OID_STR_WRAPPER("OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD"),
        N6QueryOidDot11UnreachableDetectionThreshold,
        N6SetOidDot11UnreachableDetectionThreshold
    },  
    {
        OID_DOT11_ACTIVE_PHY_LIST,  
        OID_STR_WRAPPER("OID_DOT11_ACTIVE_PHY_LIST"),
        N6QueryOidDot11ActivePhyList,
        NULL
    },
    {
        OID_DOT11_EXTSTA_CAPABILITY,  
        OID_STR_WRAPPER("OID_DOT11_EXTSTA_CAPABILITY"),
        N6QueryOidDot11ExtstaCapability,
        NULL
    },  
    {
        OID_DOT11_DATA_RATE_MAPPING_TABLE,  
        OID_STR_WRAPPER("OID_DOT11_DATA_RATE_MAPPING_TABLE"),
        N6QueryOidDot11DataRateMappingTable,
        NULL
    },
#if 0
    {
        OID_DOT11_MAXIMUM_LIST_SIZE,  
        OID_STR_WRAPPER("OID_DOT11_MAXIMUM_LIST_SIZE"),
        N6QueryOidDot11MaximumListSize,
        N6SetOidDot11MaximumListSize
    },  
#endif
    {
        OID_DOT11_PRIVACY_EXEMPTION_LIST,  
        OID_STR_WRAPPER("OID_DOT11_PRIVACY_EXEMPTION_LIST"),
        N6QueryOidDot11PrivacyExemptionList,
        N6SetOidDot11PrivacyExemptionList
    },
    {
        OID_DOT11_IBSS_PARAMS,  
        OID_STR_WRAPPER("OID_DOT11_IBSS_PARAMS"),
        N6QueryOidDot11IbssParams,
        N6SetOidDot11IbssParams
    },  
    {
        OID_DOT11_PMKID_LIST,  
        OID_STR_WRAPPER("OID_DOT11_PMKID_LIST"),
        N6QueryOidDot11PmkidList,
        N6SetOidDot11PmkidList
    },
    {
        OID_DOT11_UNICAST_USE_GROUP_ENABLED,  
        OID_STR_WRAPPER("OID_DOT11_UNICAST_USE_GROUP_ENABLED"),
        N6QueryOidDot11UnicastUseGroupEnabled,
        N6SetOidDot11UnicastUseGroupEnabled
    },
    {
        OID_DOT11_HIDDEN_NETWORK_ENABLED,  
        OID_STR_WRAPPER("OID_DOT11_HIDDEN_NETWORK_ENABLED"),
        N6QueryOidDot11HiddenNetworkEnabled,
        N6SetOidDot11HiddenNetworkEnabled
    },
    {
        OID_DOT11_QOS_PARAMS,  
        OID_STR_WRAPPER("OID_DOT11_QOS_PARAMS"),
        N6QueryOidDot11QosParams,
        N6SetOidDot11QosParams
    },  
    {
        OID_DOT11_AVAILABLE_CHANNEL_LIST,  
        OID_STR_WRAPPER("OID_DOT11_AVAILABLE_CHANNEL_LIST"),
        N6QueryOidDot11AvailableChannelList,
        N6SetOidDot11AvailableChannelList
    },
    {
        OID_DOT11_PORT_STATE_NOTIFICATION,  
        OID_STR_WRAPPER("OID_DOT11_PORT_STATE_NOTIFICATION"),
        N6QueryOidDot11PortStateNotification,
        N6SetOidDot11PortStateNotification
    }
};

static OID_LIST_ENTRY MTK_SUPPORT_N5_OIDs[]=
{
    {
        OID_GEN_SUPPORTED_LIST,
        OID_STR_WRAPPER("OID_GEN_SUPPORTED_LIST"),
        N5QueryOidGenSupportedList,
        NULL
    },
    {
        OID_GEN_HARDWARE_STATUS,
        OID_STR_WRAPPER("OID_GEN_HARDWARE_STATUS"),
        N5QueryOidGenHardwareStatus,
        NULL
    },
    {
        OID_GEN_MEDIA_SUPPORTED,
        OID_STR_WRAPPER("OID_GEN_MEDIA_SUPPORTED"),
        N5QueryOidGenMediaSupported,
        NULL
    }, 
    {
        OID_GEN_MEDIA_IN_USE,
        OID_STR_WRAPPER("OID_GEN_MEDIA_IN_USE"),
        N5QueryOidGenMediaInUse,
        NULL
    },
#if 0
    {
        OID_GEN_PHYSICAL_MEDIUM,
        OID_STR_WRAPPER("OID_GEN_PHYSICAL_MEDIUM"),
        N5QueryOidGenPhysicalMedium,
        N5SetOidGenPhysicalMedium
    },
    {
        OID_GEN_MAXIMUM_LOOKAHEAD,
        OID_STR_WRAPPER("OID_GEN_MAXIMUM_LOOKAHEAD"),
        N5QueryOidGenMaximumLookahead,
        N5SetOidGenMaximumLookahead
    },
#endif
    {
        OID_GEN_MAXIMUM_FRAME_SIZE,
        OID_STR_WRAPPER("OID_GEN_MAXIMUM_FRAME_SIZE"),
        N5QueryOidGenMaximumFrameSize,
        NULL
    },
    {
        OID_GEN_LINK_SPEED,
        OID_STR_WRAPPER("OID_GEN_LINK_SPEED"),
        N5QueryOidGenLinkSpeed,
        NULL
    },
    {
        OID_GEN_TRANSMIT_BUFFER_SPACE,
        OID_STR_WRAPPER("OID_GEN_TRANSMIT_BUFFER_SPACE"),
        N5QueryOidGenTransmitBufferSpace,
        NULL
    }, 
    {
        OID_GEN_RECEIVE_BUFFER_SPACE,
        OID_STR_WRAPPER("OID_GEN_RECEIVE_BUFFER_SPACE"),
        N5QueryOidGenReceiveBufferSpace,
        NULL
    },
    {
        OID_GEN_TRANSMIT_BLOCK_SIZE,
        OID_STR_WRAPPER("OID_GEN_TRANSMIT_BLOCK_SIZE"),
        N5QueryOidGenTransmitBlockSize,
        NULL
    },
    {
        OID_GEN_RECEIVE_BLOCK_SIZE,
        OID_STR_WRAPPER("OID_GEN_RECEIVE_BLOCK_SIZE"),
        N5QueryOidGenReceiveBlockSize,
        NULL
    },
    {
        OID_GEN_VENDOR_ID,
        OID_STR_WRAPPER("OID_GEN_VENDOR_ID"),
        N5QueryOidGenVendorId,
        NULL
    },
    {
        OID_GEN_VENDOR_DESCRIPTION,
        OID_STR_WRAPPER("OID_GEN_VENDOR_DESCRIPTION"),
        N5QueryOidGenVendorDescription,
        NULL
    },
    {
        OID_GEN_VENDOR_DRIVER_VERSION, 
        OID_STR_WRAPPER("OID_GEN_VENDOR_DRIVER_VERSION"),
        N5QueryOidGenVendorDriverVersion,
        NULL
    },
    {
        OID_GEN_CURRENT_PACKET_FILTER, 
        OID_STR_WRAPPER("OID_GEN_CURRENT_PACKET_FILTER"),
        N5QueryOidGenCurrentPacketFilter,
        N5SetOidGenCurrentPacketFilter
    },    
    {
        OID_GEN_CURRENT_LOOKAHEAD,
        OID_STR_WRAPPER("OID_GEN_CURRENT_LOOKAHEAD"),
        N5QueryOidGenCurrentLookahead,
        N5SetOidGenCurrentLookahead
    }, 
    {
        OID_GEN_DRIVER_VERSION,
        OID_STR_WRAPPER("OID_GEN_DRIVER_VERSION"),
        N5QueryOidGenDriverVersion,
        NULL
    },
    {
        OID_GEN_MAXIMUM_TOTAL_SIZE,
        OID_STR_WRAPPER("OID_GEN_MAXIMUM_TOTAL_SIZE"),
        N5QueryOidGenMaximumTotalSize,
        NULL
    },
#if 0
    {
        OID_GEN_PROTOCOL_OPTIONS,
        OID_STR_WRAPPER("OID_GEN_PROTOCOL_OPTIONS"),
        N5QueryOidGenProtocolOptions,
        N5SetOidGenProtocolOptions
    },
#endif
    {
        OID_GEN_MAC_OPTIONS,
        OID_STR_WRAPPER("OID_GEN_MAC_OPTIONS"),
        N5QueryOidGenMacOptions,
        NULL
    },
    {
        OID_GEN_MEDIA_CONNECT_STATUS,
        OID_STR_WRAPPER("OID_GEN_MEDIA_CONNECT_STATUS"),
        N5QueryOidGenMediaConnectStatus,
        NULL
    },
    {
        OID_GEN_XMIT_OK,
        OID_STR_WRAPPER("OID_GEN_XMIT_OK"),
        N5QueryOidGenXmitOk,
        NULL
    }, 
    {
        OID_GEN_RCV_OK,
        OID_STR_WRAPPER("OID_GEN_RCV_OK"),
        N5QueryOidGenRcvOk,
        NULL
    },
    {
        OID_GEN_XMIT_ERROR,
        OID_STR_WRAPPER("OID_GEN_XMIT_ERROR"),
        N5QueryOidGenXmitError,
        NULL
    },
    {
        OID_GEN_RCV_ERROR,
        OID_STR_WRAPPER("OID_GEN_RCV_ERROR"),
        N5QueryOidGenRcvError,
        NULL
    },
    {
        OID_GEN_RCV_NO_BUFFER,
        OID_STR_WRAPPER("OID_GEN_RCV_NO_BUFFER"),
        N5QueryOidGenRcvNoBuffer,
        NULL
    },
    {
        OID_GEN_RCV_CRC_ERROR,
        OID_STR_WRAPPER("OID_GEN_RCV_CRC_ERROR"),
        N5QueryOidGenRcvCrcError,
        NULL
    },
    {
        OID_GEN_TRANSMIT_QUEUE_LENGTH,
        OID_STR_WRAPPER("OID_GEN_TRANSMIT_QUEUE_LENGTH"),
        N5QueryOidGenTransmitQueueLength,
        NULL
    }, 
    {
        OID_802_3_PERMANENT_ADDRESS,
        OID_STR_WRAPPER("OID_802_3_PERMANENT_ADDRESS"),
        N5QueryOid8023PermanentAddress,
        NULL
    },
    {
        OID_DOT11_PERMANENT_ADDRESS,
        OID_STR_WRAPPER("OID_DOT11_PERMANENT_ADDRESS"),
        N5QueryOidDot11PermanentAddress,
        NULL
    },
    {
        OID_802_3_CURRENT_ADDRESS,
        OID_STR_WRAPPER("OID_802_3_CURRENT_ADDRESS"),
        N5QueryOid8023CurrentAddress,
        NULL
    },
    {
        OID_DOT11_CURRENT_ADDRESS,
        OID_STR_WRAPPER("OID_DOT11_CURRENT_ADDRESS"),
        N5QueryOidDot11CurrentAddress,
        NULL
    },
    {
        OID_802_3_MULTICAST_LIST,
        OID_STR_WRAPPER("OID_802_3_MULTICAST_LIST"),
        NULL,
        N5SetOid8023MulticastList
    },
    {
        OID_DOT11_MULTICAST_LIST,
        OID_STR_WRAPPER("OID_DOT11_MULTICAST_LIST"),
        N5QueryOidDot11MulticastList,
        N5SetOidDot11MulticastList
    }, 
    {
        OID_802_3_MAXIMUM_LIST_SIZE,
        OID_STR_WRAPPER("OID_802_3_MAXIMUM_LIST_SIZE"),
        N5QueryOid8023MaximumListSize,
        NULL
    },
#if 0
    {
        OID_GEN_INTERRUPT_MODERATION,
        OID_STR_WRAPPER("OID_GEN_INTERRUPT_MODERATION"),
        N5QueryOidGenInterruptModeration,
        N5SetOidGenInterruptModeration
    },
#endif
    {
        OID_GEN_LINK_PARAMETERS,
        OID_STR_WRAPPER("OID_GEN_LINK_PARAMETERS"),
        N5QueryOidGenLinkParameters,
        N5SetOidGenLinkParameters
    },  
    {
        OID_PM_PARAMETERS,
        OID_STR_WRAPPER("OID_PM_PARAMETERS"),
        N5QueryOidPmParameters,
        N5SetOidPmParameters
    }   
};

static OID_LIST_ENTRY MTK_SUPPORT_SELF_OIDs[]=
{
    {
        MTK_OID_N6_QUERY_VENDOR,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_VENDOR"),
        MtkOidQueryVendor,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_PHY_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_PHY_MODE"),
        MtkOidQueryPhyMode,
        NULL
    },
    {
        MTK_OID_N6_SET_PHY_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_PHY_MODE"),
        NULL,
        MtkOidSetPhyMode
    },  
    {
        MTK_OID_N6_QUERY_COUNTRY_REGION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_COUNTRY_REGION"),
        MtkOidQueryCountryRegion,
        NULL
    },
    {
        MTK_OID_N6_SET_COUNTRY_REGION,
        OID_STR_WRAPPER("MTK_OID_N6_SET_COUNTRY_REGION"),
        NULL,
        MtkOidSetCountryRegion
    },
    {
        MTK_OID_N6_QUERY_EEPROM_VERSION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_EEPROM_VERSION"),
        MtkOidQueryEepromVersion,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_FIRMWARE_VERSION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_FIRMWARE_VERSION"),
        MtkOidQueryFirmwareVersion,
        NULL
    },
    {
        MTK_OID_N6_QUERY_CURRENT_CHANNEL_ID,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_CURRENT_CHANNEL_ID"),
        MtkOidQueryCurrentChannelId,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_TX_POWER_LEVEL_1,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_TX_POWER_LEVEL_1"),
        MtkOidQueryTxPowerLevel1,
        NULL
    },
    {
        MTK_OID_N6_SET_TX_POWER_LEVEL_1,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TX_POWER_LEVEL_1"),
        NULL,
        MtkOidSetTxPowerLevel1
    },  
    {
        MTK_OID_N6_QUERY_HARDWARE_REGISTER,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_HARDWARE_REGISTER"),
        MtkOidQueryHardwareRegister,
        NULL
    },
    {
        MTK_OID_N6_SET_HARDWARE_REGISTER,
        OID_STR_WRAPPER("MTK_OID_N6_SET_HARDWARE_REGISTER"),
        NULL,
        MtkOidSetHardwareRegister
    },  
    {
        MTK_OID_N6_QUERY_LINK_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_LINK_STATUS"),
        MtkOidQueryLinkStatus,
        NULL
    },    
    {
        MTK_OID_N6_QUERY_NOISE_LEVEL,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_NOISE_LEVEL"),
        MtkOidQueryNoiseLevel,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_STATISTICS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_STATISTICS"),
        MtkOidQueryStatistics,
        NULL
    },
    {
        MTK_OID_N6_SET_RESET_COUNTERS,
        OID_STR_WRAPPER("MTK_OID_N6_SET_RESET_COUNTERS"),
        NULL,
        MtkOidSetResetCounters
    },  
    {
        MTK_OID_N6_QUERY_EXTRA_INFO,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_EXTRA_INFO"),
        MtkOidQueryExtraInfo,
        NULL
    },
    {
        MTK_OID_N6_QUERY_LAST_RX_RATE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_LAST_RX_RATE"),
        MtkOidQueryLastRxRate,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_RSSI_0,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_RSSI_0"),
        MtkOidQueryRssi0,
        NULL
    },
    {
        MTK_OID_N6_QUERY_RSSI_1,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_RSSI_1"),
        MtkOidQueryRssi1,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_LAST_TX_RATE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_LAST_TX_RATE"),
        MtkOidQueryLastTxRate,
        NULL
    },
    {
        MTK_OID_N6_QUERY_RSSI_2,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_RSSI_2"),
        MtkOidQueryRssi2,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_SNR_0,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SNR_0"),
        MtkOidQuerySnr0,
        NULL
    },
    {
        MTK_OID_N6_QUERY_SNR_1,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SNR_1"),
        MtkOidQuerySnr1,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_CONFIGURATION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_CONFIGURATION"),
        MtkOidQueryConfiguration,
        NULL
    },
    {
        MTK_OID_N6_SET_CONFIGURATION,
        OID_STR_WRAPPER("MTK_OID_N6_SET_CONFIGURATION"),
        NULL,
        MtkOidSetConfiguration
    },  
    {
        MTK_OID_N6_QUERY_AUTHENTICATION_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_AUTHENTICATION_MODE"),
        MtkOidQueryAuthenticationMode,
        NULL
    },
    {
        MTK_OID_N6_SET_AUTHENTICATION_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_AUTHENTICATION_MODE"),
        NULL,
        MtkOidSetAuthenticationMode
    },  
    {
        MTK_OID_N6_QUERY_ENCRYPTION_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_ENCRYPTION_STATUS"),
        MtkOidQueryEncryptionStatus,
        NULL
    },
    {
        MTK_OID_N6_SET_ENCRYPTION_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_SET_ENCRYPTION_STATUS"),
        NULL,
        MtkOidSetEncryptionStatus
    },  
    {
        MTK_OID_N6_SET_REMOVE_KEY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_REMOVE_KEY"),
        NULL,
        MtkOidSetRemoveKey
    },
    {
        MTK_OID_N6_SET_ADD_KEY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_ADD_KEY"),
        NULL,
        MtkOidSetAddKey
    },  
    {
        MTK_OID_N6_QUERY_EVENT_TABLE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_EVENT_TABLE"),
        MtkOidQueryEventTable,
        NULL
    },
    {
        MTK_OID_N6_QUERY_MAC_TABLE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_MAC_TABLE"),
        MtkOidQueryMacTable,
        NULL
    },  
    {
        MTK_OID_N6_SET_ACL,
        OID_STR_WRAPPER("MTK_OID_N6_SET_ACL"),
        NULL,
        MtkOidSetAcl
    },
    {
        MTK_OID_N6_QUERY_OP_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_OP_MODE"),
        MtkOidQueryOpMode,
        NULL
    },  
    {
        MTK_OID_N6_SET_OP_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_OP_MODE"),
        NULL,
        MtkOidSetOpMode
    },
    {
        MTK_OID_N6_QUERY_AP_CONFIG,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_AP_CONFIG"),
        MtkOidQueryApConfig,
        NULL
    },  
    {
        MTK_OID_N6_SET_AP_CONFIG,
        OID_STR_WRAPPER("MTK_OID_N6_SET_AP_CONFIG"),
        NULL,
        MtkOidSetApConfig
    },
    {
        MTK_OID_N6_QUERY_BATABLE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_BATABLE"),
        MtkOidQueryBatable,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_IMME_BA_CAP,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_IMME_BA_CAP"),
        MtkOidQueryImmeBaCap,
        NULL
    },
    {
        MTK_OID_N6_SET_IMME_BA_CAP,
        OID_STR_WRAPPER("MTK_OID_N6_SET_IMME_BA_CAP"),
        NULL,
        MtkOidSetImmeBaCap
    },  
    {
        MTK_OID_N6_SET_ADD_IMME_BA,
        OID_STR_WRAPPER("MTK_OID_N6_SET_ADD_IMME_BA"),
        NULL,
        MtkOidSetAddImmeBa
    },
    {
        MTK_OID_N6_SET_TEAR_IMME_BA,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TEAR_IMME_BA"),
        NULL,
        MtkOidSetTearImmeBa
    },  
    {
        MTK_OID_N6_QUERY_HT_PHYMODE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_HT_PHYMODE"),
        MtkOidQueryHtPhymode,
        NULL
    },
    {
        MTK_OID_N6_SET_HT_PHYMODE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_HT_PHYMODE"),
        NULL,
        MtkOidSetHtPhymode
    },  
    {
        MTK_OID_N6_SET_DESIRED_BSSID_LIST,
        OID_STR_WRAPPER("MTK_OID_N6_SET_DESIRED_BSSID_LIST"),
        NULL,
        MtkOidSetDesiredBssidList
    },  
    {
        MTK_OID_N6_SET_DISCONNECT_REQUEST,
        OID_STR_WRAPPER("MTK_OID_N6_SET_DISCONNECT_REQUEST"),
        NULL,
        MtkOidSetDisconnectRequest
    },
    {
        MTK_OID_N6_QUERY_WPA_REKEY,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WPA_REKEY"),
        MtkOidQueryWpaRekey,
        NULL
    },  
    {
        MTK_OID_N6_SET_WPA_REKEY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WPA_REKEY"),
        NULL,
        MtkOidSetWpaRekey
    },
    {
        MTK_OID_N6_SET_FLUSH_BSS_LIST,
        OID_STR_WRAPPER("MTK_OID_N6_SET_FLUSH_BSS_LIST"),
        NULL,
        MtkOidSetFlushBssList
    },  
    {
        MTK_OID_N6_QUERY_STA_CONFIG,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_STA_CONFIG"),
        MtkOidQueryStaConfig,
        NULL
    },
    {
        MTK_OID_N6_SET_STA_CONFIG,
        OID_STR_WRAPPER("MTK_OID_N6_SET_STA_CONFIG"),
        NULL,
        MtkOidSetStaConfig
    },  
    {
        MTK_OID_N6_SET_CCX20_INFO,
        OID_STR_WRAPPER("MTK_OID_N6_SET_CCX20_INFO"),
        NULL,
        MtkOidSetCcx20Info
    },
    {
        MTK_OID_N6_QUERY_PREAMBLE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_PREAMBLE"),
        MtkOidQueryPreamble,
        NULL
    },  
    {
        MTK_OID_N6_SET_PREAMBLE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_PREAMBLE"),
        NULL,
        MtkOidSetPreamble
    },
    {
        MTK_OID_N6_QUERY_APSD_SETTING,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_APSD_SETTING"),
        MtkOidQueryApsdSetting,
        NULL
    },  
    {
        MTK_OID_N6_SET_APSD_SETTING,
        OID_STR_WRAPPER("MTK_OID_N6_SET_APSD_SETTING"),
        NULL,
        MtkOidSetApsdSetting
    },
    {
        MTK_OID_N6_QUERY_APSD_PSM,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_APSD_PSM"),
        MtkOidQueryApsdPsm,
        NULL
    },  
    {
        MTK_OID_N6_SET_APSD_PSM,
        OID_STR_WRAPPER("MTK_OID_N6_SET_APSD_PSM"),
        NULL,
        MtkOidSetApsdPsm
    },
    {
        MTK_OID_N6_QUERY_WMM,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WMM"),
        MtkOidQueryWmm,
        NULL
    },  
    {
        MTK_OID_N6_SET_WMM,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WMM"),
        NULL,
        MtkOidSetWmm
    },
    {
        MTK_OID_N6_QUERY_DLS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_DLS"),
        MtkOidQueryDls,
        NULL
    },  
    {
        MTK_OID_N6_SET_DLS,
        OID_STR_WRAPPER("MTK_OID_N6_SET_DLS"),
        NULL,
        MtkOidSetDls
    },
    {
        MTK_OID_N6_QUERY_DLS_PARAM,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_DLS_PARAM"),
        MtkOidQueryDlsParam,
        NULL
    },  
    {
        MTK_OID_N6_SET_DLS_PARAM,
        OID_STR_WRAPPER("MTK_OID_N6_SET_DLS_PARAM"),
        NULL,
        MtkOidSetDlsParam
    },
    {
        MTK_OID_N6_SET_CIPHER_KEY_MAPPING_KEY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_CIPHER_KEY_MAPPING_KEY"),
        NULL,
        MtkOidSetCipherKeyMappingKey
    },
    {
        MTK_OID_N6_SET_CIPHER_DEFAULT_KEY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_CIPHER_DEFAULT_KEY"),
        NULL,
        MtkOidSetCipherDefaultKey
    },  
    {
        MTK_OID_N6_QUERY_MFP_CONTROL,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_MFP_CONTROL"),
        MtkOidQueryMfpControl,
        NULL
    },      
    {
        MTK_OID_N6_SET_MFP_CONTROL,
        OID_STR_WRAPPER("MTK_OID_N6_SET_MFP_CONTROL"),
        NULL,
        MtkOidSetMfpControl
    },  
    {
        MTK_OID_N6_QUERY_PORT_USAGE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_PORT_USAGE"),
        MtkOidQueryPortUsage,
        NULL
    },
    {
        MTK_OID_N6_SET_FRAGMENTATION_THRESHOLD,
        OID_STR_WRAPPER("MTK_OID_N6_SET_FRAGMENTATION_THRESHOLD"),
        NULL,
        MtkOidSetFragmentationThreshold
    },  
    {
        MTK_OID_N6_SET_RTS_THRESHOLD,
        OID_STR_WRAPPER("MTK_OID_N6_SET_RTS_THRESHOLD"),
        NULL,
        MtkOidSetRtsThreshold
    },      
    {
        MTK_OID_N6_SET_POWER_MGMT_REQUEST,
        OID_STR_WRAPPER("MTK_OID_N6_SET_POWER_MGMT_REQUEST"),
        NULL,
        MtkOidSetPowerMgmtRequest
    },      
    {
        MTK_OID_N6_QUERY_USB_VERSION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_USB_VERSION"),
        MtkOidQueryUsbVersion,
        NULL
    },
    {
        MTK_OID_N6_QUERY_INITIALIZATION_STATE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_INITIALIZATION_STATE"),
        MtkOidQueryInitializationState,
        NULL
    },  
    {
        MTK_OID_N6_SET_LED_WPS_MODE10,
        OID_STR_WRAPPER("MTK_OID_N6_SET_LED_WPS_MODE10"),
        NULL,
        MtkOidSetLedWpsMode10
    }, 
    {
        MTK_OID_N6_SET_WSC_HW_PBC_CUSTOMER_VENDOR_STATE_MACHINE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_HW_PBC_CUSTOMER_VENDOR_STATE_MACHINE"),
        NULL,
        MtkOidSetWscHwPbcCustomerVendorStateMachine
    },
    {
        MTK_OID_N6_SET_WSC_PIN_CODE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_PIN_CODE"),
        NULL,
        MtkOidSetWscPinCode
    },
    {
        MTK_OID_N6_SET_USB_CYCLE_PORT,
        OID_STR_WRAPPER("MTK_OID_N6_SET_USB_CYCLE_PORT"),
        NULL,
        MtkOidSetUsbCyclePort
    },      
    {
        MTK_OID_N6_QUERY_MANUAL_CH_LIST,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_MANUAL_CH_LIST"),
        MtkOidQueryManualChList,
        NULL
    },
#if 0
    {
        MTK_OID_N5_QUERY_BT_HCI_GET_CMD,
        OID_STR_WRAPPER("MTK_OID_N5_QUERY_BT_HCI_GET_CMD"),
        MtkOidQueryBtHciGetCmd,
        NULL
    },  
    {
        MTK_OID_N5_QUERY_BT_HCI_GET_ACL_DATA,
        OID_STR_WRAPPER("MTK_OID_N5_QUERY_BT_HCI_GET_ACL_DATA"),
        MtkOidQueryBtHciGetAclData,
        NULL
    },      
#endif    
    {
        MTK_OID_N5_SET_BT_HCI_SEND_CMD,
        OID_STR_WRAPPER("MTK_OID_N5_SET_BT_HCI_SEND_CMD"),
        NULL,
        MtkOidSetBtHciSendCmd
    },     
    {
        MTK_OID_N5_SET_BT_HCI_SEND_ACL_DATA,
        OID_STR_WRAPPER("MTK_OID_N5_SET_BT_HCI_SEND_ACL_DATA"),
        NULL,
        MtkOidSetBtHciSendAclData
    },
    {
        MTK_OID_N6_QUERY_EEPROM_BANDWIDTH,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_EEPROM_BANDWIDTH"),
        MtkOidQueryEepromBandwidth,
        NULL
    },  
    {
        MTK_OID_N6_SET_P2P_CONFIG,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_CONFIG"),
        NULL,
        MtkOidSetP2pConfig
    },      
    {
        MTK_OID_N6_SET_P2P_PERST_TAB,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_PERST_TAB"),
        NULL,
        MtkOidSetP2pPerstTab
    },  
    {
        MTK_OID_N6_QUERY_P2P_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_P2P_STATUS"),
        MtkOidQueryP2pStatus,
        NULL
    },
    {
        MTK_OID_N6_QUERY_WIFI_DIRECT_LINKSTATE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WIFI_DIRECT_LINKSTATE"),
        MtkOidQueryWifiDirectLinkstate,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_P2P_MAC_INFO,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_P2P_MAC_INFO"),
        MtkOidQueryP2pMacInfo,
        NULL
    },      
    {
        MTK_OID_N6_SET_P2P_EVENT,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_EVENT"),
        NULL,
        MtkOidSetP2pEvent
    },      
    {
        MTK_OID_N6_SET_P2P_DISCONNECT_PER_CONNECTION,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_DISCONNECT_PER_CONNECTION"),
        NULL,
        MtkOidSetP2pDisconnectPerConnection
    },
    {
        MTK_OID_N6_SET_P2P_EVENT_READY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_EVENT_READY"),
        NULL,
        MtkOidSetP2pEventReady
    },  
    {
        MTK_OID_N6_SET_P2P_IP,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_IP"),
        NULL,
        MtkOidSetP2pIp
    },      
    {
        MTK_OID_N6_SET_P2P_GO_PASSPHRASE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_GO_PASSPHRASE"),
        NULL,
        MtkOidSetP2pGoPassphrase
    },         
    {
        MTK_OID_N6_QUERY_P2P_PERSIST,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_P2P_PERSIST"),
        MtkOidQueryP2pPersist,
        NULL
    },  
    {
        MTK_OID_N6_SET_P2P_PERSIST,
        OID_STR_WRAPPER("MTK_OID_N6_SET_P2P_PERSIST"),
        NULL,
        MtkOidSetP2pPersist
    },      
    {
        MTK_OID_N6_QUERY_SIGMA_P2P_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SIGMA_P2P_STATUS"),
        MtkOidQuerySigmaP2pStatus,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_SIGMA_WPS_PINCODE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SIGMA_WPS_PINCODE"),
        MtkOidQuerySigmaWpsPincode,
        NULL
    },
    {
        MTK_OID_N6_QUERY_SIGMA_PSK,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SIGMA_PSK"),
        MtkOidQuerySigmaPsk,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_BALD_EAGLE_SSID,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_BALD_EAGLE_SSID"),
        MtkOidQueryBaldEagleSsid,
        NULL
    },      
    {
        MTK_OID_N6_SET_BALD_EAGLE_SSID,
        OID_STR_WRAPPER("MTK_OID_N6_SET_BALD_EAGLE_SSID"),
        NULL,
        MtkOidSetBaldEagleSsid
    },      
    {
        MTK_OID_N6_QUERY_EXTREG_EVENT_MESSAGE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_EXTREG_EVENT_MESSAGE"),
        MtkOidQueryExtregEventMessage,
        NULL
    },
    {
        MTK_OID_N6_SET_WSC_EXTREG_MESSSAGE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_EXTREG_MESSSAGE"),
        NULL,
        MtkOidSetWscExtregMesssage
    },
    {
        MTK_OID_N6_SET_SUPPRESS_SCAN,
        OID_STR_WRAPPER("MTK_OID_N6_SET_SUPPRESS_SCAN"),
        NULL,
        MtkOidSetSuppressScan
    },  
    {
        MTK_OID_N6_QUERY_SUPPRESS_SCAN,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SUPPRESS_SCAN"),
        MtkOidQuerySuppressScan,
        NULL
    },      
    
#if 0 // Remove TDT OID
    {
        MTK_OID_N6_QUERY_WIFI_CHIPTYPE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WIFI_CHIPTYPE"),
        MtkOidQueryWifiChiptype,
        NULL
    },      
    {
        MTK_OID_N6_SET_TDT_EVENT,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TDT_EVENT"),
        NULL,
        MtkOidSetTdtEvent
    },
    {
        MTK_OID_N6_SET_TDT_EVENT_END,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TDT_EVENT_END"),
        NULL,
        MtkOidSetTdtEventEnd
    },  
    {
        MTK_OID_N6_SET_TDT_DISABLE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TDT_DISABLE"),
        NULL,
        MtkOidSetTdtDisable
    },      
    {
        MTK_OID_N6_SET_TDT_ENABLE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TDT_ENABLE"),
        NULL,
        MtkOidSetTdtEnable
    }, 
    {
        MTK_OID_N6_QUERY_TDT_PERIODIC,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_TDT_PERIODIC"),
        MtkOidQueryTdtPeriodic,
        NULL
    },
    {
        MTK_OID_N6_QUERY_TDT_ONESHOT_CALIBRATION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_TDT_ONESHOT_CALIBRATION"),
        MtkOidQueryTdtOneshotCalibration,
        NULL
    },
    {
        MTK_OID_N6_QUERY_TDT_ONESHOT_PACKET,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_TDT_ONESHOT_PACKET"),
        MtkOidQueryTdtOneshotPacket,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_TDT_ONESHOT_SELECT_RATETABLE_NAME,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_TDT_ONESHOT_SELECT_RATETABLE_NAME"),
        MtkOidQueryTdtOneshotSelectRatetableName,
        NULL
    },      
#endif // Remove TDT OID

    {
        MTK_OID_N6_SET_CUSTOMER_BT_RADIO_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_SET_CUSTOMER_BT_RADIO_STATUS"),
        NULL,
        MtkOidSetCustomerBtRadioStatus
    },  
    {
        MTK_OID_N6_QUERY_SNR_2,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SNR_2"),
        MtkOidQuerySnr2,
        NULL
    },
#if 0
    {
        MTK_OID_N6_QUERY_STBC_RX_COUNT,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_STBC_RX_COUNT"),
        MtkOidQueryStbcRxCount,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_STBC_TX_COUNT,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_STBC_TX_COUNT"),
        MtkOidQueryStbcTxCount,
        NULL
    },      
#endif
    {
        MTK_OID_N6_QUERY_SS_NUM,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_SS_NUM"),
        MtkOidQuerySsNum,
        NULL
    },      
    {
        MTK_OID_N6_SET_SS_NUM,
        OID_STR_WRAPPER("MTK_OID_N6_SET_SS_NUM"),
        NULL,
        MtkOidSetSsNum
    },
    {
        MTK_OID_N5_QUERY_STBC_RX_COUNT,
        OID_STR_WRAPPER("MTK_OID_N5_QUERY_STBC_RX_COUNT"),
        MtkOidQueryStbcRxCount,
        NULL
    },  
    {
        MTK_OID_N5_QUERY_STBC_TX_COUNT,
        OID_STR_WRAPPER("MTK_OID_N5_QUERY_STBC_TX_COUNT"),
        MtkOidQueryStbcTxCount,
        NULL
    },      
    {
        MTK_OID_N5_QUERY_SS_NUM,
        OID_STR_WRAPPER("MTK_OID_N5_QUERY_SS_NUM"),
        MtkOidQuerySsNum,
        NULL
    },     
    {
        MTK_OID_N5_SET_SS_NUM,
        OID_STR_WRAPPER("MTK_OID_N5_SET_SS_NUM"),
        NULL,
        MtkOidSetSsNum
    },
#if 0
    {
        MTK_OID_N5_QUERY_SNR_2,
        OID_STR_WRAPPER("MTK_OID_N5_QUERY_SNR_2"),
        MtkOidQuerySnr2,
        NULL
    },  
#endif
    {
        MTK_OID_N5_SET_TXBF_ETX_BF_TIMEOUT,
        OID_STR_WRAPPER("MTK_OID_N5_SET_TXBF_ETX_BF_TIMEOUT"),
        NULL,
        MtkOidSetTxbfEtxBfTimeout
    },      
    {
        MTK_OID_N5_SET_TXBF_ETX_BF_EN,
        OID_STR_WRAPPER("MTK_OID_N5_SET_TXBF_ETX_BF_EN"),
        NULL,
        MtkOidSetTxbfEtxBfEn
    },  
    {
        MTK_OID_N5_SET_TXBF_ETX_BF_NON_COMPRESSED_FEEDBACK,
        OID_STR_WRAPPER("MTK_OID_N5_SET_TXBF_ETX_BF_NON_COMPRESSED_FEEDBACK"),
        NULL,
        MtkOidSetTxbfEtxBfNonCompressedFeedback
    },
    {
        MTK_OID_N6_QUERY_WSC_VERSION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_VERSION"),
        MtkOidQueryWscVersion,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_WSC_EXTREG_PBC_ENRO_MAC,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_EXTREG_PBC_ENRO_MAC"),
        MtkOidQueryWscExtregPbcEnroMac,
        NULL
    },      
    {
        MTK_OID_N6_SET_RECONFIG_AP,
        OID_STR_WRAPPER("MTK_OID_N6_SET_RECONFIG_AP"),
        NULL,
        MtkOidSetReconfigAp
    },      
    {
        MTK_OID_N6_SET_DISABLE_ANTENNA_DIVERSITY,
        OID_STR_WRAPPER("MTK_OID_N6_SET_DISABLE_ANTENNA_DIVERSITY"),
        NULL,
        MtkOidSetDisableAntennaDiversity
    },
    {
        MTK_OID_N6_SET_FIXED_MAIN_ANTENNA,
        OID_STR_WRAPPER("MTK_OID_N6_SET_FIXED_MAIN_ANTENNA"),
        NULL,
        MtkOidSetFixedMainAntenna
    },  
    {
        MTK_OID_N6_SET_FIXED_AUX_ANTENNA,
        OID_STR_WRAPPER("MTK_OID_N6_SET_FIXED_AUX_ANTENNA"),
        NULL,
        MtkOidSetFixedAuxAntenna
    },      
    {
        MTK_OID_N6_QUERY_HW_ARCHITECTURE_VERSION,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_HW_ARCHITECTURE_VERSION"),
        MtkOidQueryHwArchitectureVersion,
        NULL
    },         
    {
        MTK_OID_N6_QUERY_HW_CAPABILITIES,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_HW_CAPABILITIES"),
        MtkOidQueryHwCapabilities,
        NULL
    },  
    {
        MTK_OID_N6_SET_FIXED_RATE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_FIXED_RATE"),
        NULL,
        MtkOidSetFixedRate
    },      
    {
        MTK_OID_N6_QUERY_WTBL_INFO,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WTBL_INFO"),
        MtkOidQueryWtblInfo,
        NULL
    },  
#if 0
    {
        MTK_OID_N6_QUERY_TEST_TX_NULL_FRAME,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_TEST_TX_NULL_FRAME"),
        MtkOidQueryTestTxNullFrame,
        NULL
    },
#endif
    {
        MTK_OID_N6_SET_TEST_TX_NULL_FRAME,
        OID_STR_WRAPPER("MTK_OID_N6_SET_TEST_TX_NULL_FRAME"),
        NULL,
        MtkOidSetTestTxNullFrame
    },  
#if 0
    {
        MTK_OID_N6_QUERY_RADIO_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_RADIO_STATUS"),
        MtkOidQueryRadioStatus,
        NULL
    },      
#endif
    {
        MTK_OID_N6_SET_RADIO,
        OID_STR_WRAPPER("MTK_OID_N6_SET_RADIO"),
        NULL,
        MtkOidSetRadio
    },      
    {
        MTK_OID_N6_QUERY_MIB,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_MIB"),
        MtkOidQueryMib,
        NULL
    },
#if 0
    {
        MTK_OID_N6_QUERY_POWER_MANAGEMENT,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_POWER_MANAGEMENT"),
        MtkOidQueryPowerManagement,
        NULL
    },  
#endif
    {
        MTK_OID_N6_SET_POWER_MANAGEMENT,
        OID_STR_WRAPPER("MTK_OID_N6_SET_POWER_MANAGEMENT"),
        NULL,
        MtkOidSetPowerManagement
    },
#if 0
    {
        MTK_OID_N6_QUERY_RF_TEST,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_RF_TEST"),
        MtkOidQueryRfTest,
        NULL
    },  
#endif
    {
        MTK_OID_N6_SET_RF_TEST,
        OID_STR_WRAPPER("MTK_OID_N6_SET_RF_TEST"),
        NULL,
        MtkOidSetRfTest
    },
    {
        MTK_OID_N6_SET_WSC_MODE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_MODE"),
        NULL,
        MtkOidSetWscMode
    },  
    {
        MTK_OID_N6_SET_WSC_ASSOCIATE_IE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_ASSOCIATE_IE"),
        NULL,
        MtkOidSetWscAssociateIe
    }, 
    {
        MTK_OID_N6_SET_WSC_PROBEREQ_IE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_PROBEREQ_IE"),
        NULL,
        MtkOidSetWscProbereqIe
    },     
    {
        MTK_OID_N6_QUERY_WSC_CUSTOMIZED_IE_PARAM,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_CUSTOMIZED_IE_PARAM"),
        MtkOidQueryWscCustomizedIeParam,
        NULL
    }, 
    {
        MTK_OID_N6_SET_WSC_CUSTOMIZED_IE_PARAM,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_CUSTOMIZED_IE_PARAM"),
        NULL,
        MtkOidSetWscCustomizedIeParam
    }, 
    {
        MTK_OID_N6_SET_WSC_PROFILE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_PROFILE"),
        NULL,
        MtkOidSetWscProfile
    },     
    {
        MTK_OID_N6_SET_WSC_ACTIVE_PROFILE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_ACTIVE_PROFILE"),
        NULL,
        MtkOidSetWscActiveProfile
    }, 
    {
        MTK_OID_N6_SET_WSC_CUSTOMIZE_DEVINFO,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_CUSTOMIZE_DEVINFO"),
        NULL,
        MtkOidSetWscCustomizeDevinfo
    }, 
    {
        MTK_OID_N6_QUERY_WSC_STATUS,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_STATUS"),
        MtkOidQueryWscStatus,
        NULL
    },     
    {
        MTK_OID_N6_QUERY_WSC_PROFILE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_PROFILE"),
        MtkOidQueryWscProfile,
        NULL
    },
    {
        MTK_OID_N6_QUERY_WSC_SSID,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_SSID"),
        MtkOidQueryWscSsid,
        NULL
    },  
    {
        MTK_OID_N6_QUERY_WSC_HW_PBC,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_HW_PBC"),
        MtkOidQueryWscHwPbc,
        NULL
    }, 
    {
        MTK_OID_N6_SET_PREFERRED_WPS_AP_PHY_TYPE,
        OID_STR_WRAPPER("MTK_OID_N6_SET_PREFERRED_WPS_AP_PHY_TYPE"),
        NULL,
        MtkOidSetPreferredWpsApPhyType
    },     
    {
        MTK_OID_N6_QUERY_PREFERRED_WPS_AP_PHY_TYPE,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_PREFERRED_WPS_AP_PHY_TYPE"),
        MtkOidQueryPreferredWpsApPhyType,
        NULL
    }, 
    {
        MTK_OID_N6_QUERY_WSC_AP_CHANNEL,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC_AP_CHANNEL"),
        MtkOidQueryWscApChannel,
        NULL
    }, 
    {
        MTK_OID_N6_SET_WSC_WPS_STATE_MACHINE_TERMINATION,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_WPS_STATE_MACHINE_TERMINATION"),
        NULL,
        MtkOidSetWscWpsStateMachineTermination
    },     
    {
        MTK_OID_N5_SET_WSC_GETPROFILE_COMPLETE,
        OID_STR_WRAPPER("MTK_OID_N5_SET_WSC_GETPROFILE_COMPLETE"),
        NULL,
        MtkOidSetWscGetprofileComplete
    }, 
    {
        MTK_OID_N6_SET_WSC_VERSION2,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC_VERSION2"),
        NULL,
        MtkOidSetWscVersion2
    }, 
    {
        MTK_OID_N6_SET_USE_SEL_ENRO_MAC,
        OID_STR_WRAPPER("MTK_OID_N6_SET_USE_SEL_ENRO_MAC"),
        NULL,
        MtkOidSetUseSelEnroMac
    },     
    {
        MTK_OID_N6_QUERY_WSC20_TESTBED,
        OID_STR_WRAPPER("MTK_OID_N6_QUERY_WSC20_TESTBED"),
        MtkOidQueryWsc20Testbed,
        NULL
    },
    {
        MTK_OID_N6_SET_WSC20_TESTBED,
        OID_STR_WRAPPER("MTK_OID_N6_SET_WSC20_TESTBED"),
        NULL,
        MtkOidSetWsc20Testbed
    }    
};

#if (SUPPORT_QA_TOOL ==1)
static OID_LIST_ENTRY MTK_SUPPORT_QA_OIDs[]=
{ 
    //add QA related oid here
};
#endif

#endif
